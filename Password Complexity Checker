import re

def check_password_strength(password):
    """
    Checks the strength of a password based on multiple criteria.
    
    :param password: The password string to be evaluated.
    :return: A tuple containing the password strength and feedback.
    """
    feedback = []
    
    # Length check
    if len(password) < 16:
        feedback.append("Password should be at least 16 characters long.")
    
    # Uppercase check
    if not re.search(r'[A-Z]', password):
        feedback.append("Password should contain at least one uppercase letter.")
    
    # Lowercase check
    if not re.search(r'[a-z]', password):
        feedback.append("Password should contain at least one lowercase letter.")
    
    # Number check
    if not re.search(r'[0-9]', password):
        feedback.append("Password should contain at least one number.")
    
    # Special character check
    if not re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        feedback.append("Password should contain at least one special character.")
    
    # Determine strength
    if not feedback:
        strength = "Strong"
        feedback.append("Your password is strong.")
    else:
        strength = "Weak"
    
    return strength, feedback

def main():
    # User input
    password = input("Enter your password: ")
    
    # Check password strength
    strength, feedback = check_password_strength(password)
    
    # Display results
    print(f"Password Strength: {strength}")
    print("Feedback:")
    for item in feedback:
        print(f"- {item}")

if __name__ == "__main__":
    main()
